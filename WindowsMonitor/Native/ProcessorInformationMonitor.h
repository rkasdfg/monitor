/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_bench4q_monitor_performance_windows_ProcessorInformationMonitor */

#ifndef _Included_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
#define _Included_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
#ifdef __cplusplus
extern "C" {
#endif
	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getInstances
	* Signature: ()[Ljava/lang/String;
	*/
	JNIEXPORT jobjectArray JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getInstances
		(JNIEnv *, jobject);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getCounterList
	* Signature: ()[Ljava/lang/String;
	*/
	JNIEXPORT jobjectArray JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getCounterList
		(JNIEnv *, jobject);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getPerformanceLimitFlags
	* Signature: (Ljava/lang/String;)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getPerformanceLimitFlags
		(JNIEnv *, jobject, jstring);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getPerformanceLimitPercent
	* Signature: (Ljava/lang/String;)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getPerformanceLimitPercent
		(JNIEnv *, jobject, jstring);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getPrivilegedUtilityPercent
	* Signature: (Ljava/lang/String;I)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getPrivilegedUtilityPercent
		(JNIEnv *, jobject, jstring, jint);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getProcessorUtilityPercent
	* Signature: (Ljava/lang/String;I)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getProcessorUtilityPercent
		(JNIEnv *, jobject, jstring, jint);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getProcessorPerformancePercent
	* Signature: (Ljava/lang/String;I)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getProcessorPerformancePercent
		(JNIEnv *, jobject, jstring, jint);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getIdleBreakEventsPerSecond
	* Signature: (Ljava/lang/String;I)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getIdleBreakEventsPerSecond
		(JNIEnv *, jobject, jstring, jint);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getAverageIdleTime
	* Signature: (Ljava/lang/String;I)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getAverageIdleTime
		(JNIEnv *, jobject, jstring, jint);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getClockInterruptsPerSecond
	* Signature: (Ljava/lang/String;I)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getClockInterruptsPerSecond
		(JNIEnv *, jobject, jstring, jint);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getProcessorStateFlags
	* Signature: (Ljava/lang/String;)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getProcessorStateFlags
		(JNIEnv *, jobject, jstring);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getPercentageOfMaximumFrequency
	* Signature: (Ljava/lang/String;)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getPercentageOfMaximumFrequency
		(JNIEnv *, jobject, jstring);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getProcessorFrequency
	* Signature: (Ljava/lang/String;)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getProcessorFrequency
		(JNIEnv *, jobject, jstring);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getParkingStatus
	* Signature: (Ljava/lang/String;)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getParkingStatus
		(JNIEnv *, jobject, jstring);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getPriorityTimePercent
	* Signature: (Ljava/lang/String;I)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getPriorityTimePercent
		(JNIEnv *, jobject, jstring, jint);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getC3TransitionsPerSecond
	* Signature: (Ljava/lang/String;I)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getC3TransitionsPerSecond
		(JNIEnv *, jobject, jstring, jint);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getC2TransitionsPerSecond
	* Signature: (Ljava/lang/String;I)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getC2TransitionsPerSecond
		(JNIEnv *, jobject, jstring, jint);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getC1TransitionsPerSecond
	* Signature: (Ljava/lang/String;I)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getC1TransitionsPerSecond
		(JNIEnv *, jobject, jstring, jint);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getC3TimePercent
	* Signature: (Ljava/lang/String;I)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getC3TimePercent
		(JNIEnv *, jobject, jstring, jint);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getC2TimePercent
	* Signature: (Ljava/lang/String;I)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getC2TimePercent
		(JNIEnv *, jobject, jstring, jint);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getC1TimePercent
	* Signature: (Ljava/lang/String;I)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getC1TimePercent
		(JNIEnv *, jobject, jstring, jint);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getIdleTimePercent
	* Signature: (Ljava/lang/String;I)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getIdleTimePercent
		(JNIEnv *, jobject, jstring, jint);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getDpcRate
	* Signature: (Ljava/lang/String;)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getDpcRate
		(JNIEnv *, jobject, jstring);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getDpcsQueuedPerSecond
	* Signature: (Ljava/lang/String;I)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getDpcsQueuedPerSecond
		(JNIEnv *, jobject, jstring, jint);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getInterruptTimePercent
	* Signature: (Ljava/lang/String;I)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getInterruptTimePercent
		(JNIEnv *, jobject, jstring, jint);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getDpcTimePercent
	* Signature: (Ljava/lang/String;I)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getDpcTimePercent
		(JNIEnv *, jobject, jstring, jint);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getInterruptsPerSecond
	* Signature: (Ljava/lang/String;I)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getInterruptsPerSecond
		(JNIEnv *, jobject, jstring, jint);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getPrivilegedTimePercent
	* Signature: (Ljava/lang/String;I)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getPrivilegedTimePercent
		(JNIEnv *, jobject, jstring, jint);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getUserTimePercent
	* Signature: (Ljava/lang/String;I)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getUserTimePercent
		(JNIEnv *, jobject, jstring, jint);

	/*
	* Class:     org_bench4q_monitor_performance_windows_ProcessorInformationMonitor
	* Method:    getProcessorTimePercent
	* Signature: (Ljava/lang/String;I)D
	*/
	JNIEXPORT jdouble JNICALL Java_org_bench4q_monitor_performance_windows_ProcessorInformationMonitor_getProcessorTimePercent
		(JNIEnv *, jobject, jstring, jint);

#ifdef __cplusplus
}
#endif
#endif
